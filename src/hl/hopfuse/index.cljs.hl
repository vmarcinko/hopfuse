(page "index.html"
      (:require
       [tailrecursion.hoplon.reload :refer [reload-all]]
       [hopfuse.bootstrap-support :refer [container control-label form-group form-horizontal tabs tab]]
       [hopfuse.rpc :as rpc]
       [hopfuse.support :as support]))

(reload-all)

(rpc/init)

(defc= logged-user-title
       (let [logged-user (:logged-user rpc/state)]
         (str (:name logged-user) " " (:last-name logged-user))))

(defc login-data {})

(add-watch rpc/state :info-message-timeout-trigger
           (fn [_ _ old-value new-value]
             (when (and (:info-message new-value)
                        (not (:info-message old-value)))
               (timeout #(swap! rpc/state dissoc :info-message) 2000))))

;(defc update-user nil)

(html
  (head
    (link :href "css/main.css" :rel "stylesheet" :type "text/css")
    (link :href "css/bootstrap.min.css" :rel "stylesheet" :type "text/css")
    (link :href "css/bootstrap-theme.min.css" :rel "stylesheet" :type "text/css"))
  (body

    (container

      (support/cell-inspector
        (text "Login data: ~{login-data}")
        (text "State cell: ~{rpc/state}")
        (text "Error cell: ~{(pr-str rpc/error)}")
        (text "Loading cell: ~{rpc/loading}"))


      ;(support/modal :toggle-modal update-user
      ;  (support/modal-header
      ;    (support/close-button :click #(reset! update-user nil))
      ;    (h4 "Updating user ..."))
      ;  (support/modal-body
      ;    (form-horizontal
      ;      ;:submit #(rpc/update-user! @update-user)
      ;      (form-group
      ;        (control-label :col {:sm 2} :for "inputName" "Name")
      ;        (div :col {:sm 5}
      ;             (input :type "text" :class "form-control" :id "inputName" :placeholder "Type here"
      ;                    :value (cell= (:name update-user))
      ;                    :change (support/assoc-handler update-user :name))))
      ;      (form-group
      ;        (control-label :col {:sm 2} :for "inputLastName" "Last Name")
      ;        (div :col {:sm 5}
      ;             (input :type "text" :class "form-control" :id "inputLastName" :placeholder "Type here"
      ;                    :value (cell= (:last-name update-user))
      ;                    :change (support/assoc-handler update-user :last-name)))))
      ;    )
      ;  (support/modal-footer
      ;            (button :type "button" :class "btn btn-default" :click #(reset! update-user nil) "Close")
      ;            (button :type "button" :class "btn btn-default"
      ;                    :click #((rpc/update-user! @update-user)
      ;                             (show-info "User '" (:username @update-user) "' updated!")
      ;                             (reset! update-user nil))
      ;                    "Submit")))

      (div :class "modal" :toggle rpc/loading-in-process?
        (div :class "modal-dialog"
             (div :class "modal-content"
                  (div :class "modal-body" "Please wait ..."))))

      (support/alert :type :info
                     :toggle (cell= (:info-message rpc/state))
                     (text "~{(:info-message rpc/state)}"))

      (support/dismissible-alert :type (cell= (when rpc/error :danger))
                                 :message (cell= (:message rpc/error))
                                 :close-cell rpc/error)

      (div :id "logged-off-content" :toggle (cell= (not rpc/logged-in?))

           (form :submit #(let [login-data-value @login-data]
                           (rpc/login! (:username login-data-value) (:password login-data-value)))
                 (h2 "Please log in")
                 (input :id "inputUsername" :type "text" :class "form-control" :placeholder "Username" :autofocus true
                        :change (support/assoc-handler login-data :username))

                 (input :id "inputPassword" :type "password" :class "form-control" :placeholder "Password"
                        :change (support/assoc-handler login-data :password))

                 (div :class "checkbox"
                      (label
                        (input :type "checkbox" :value "remember-me")
                        "Remember me"))

                 (button :class "btn btn-lg btn-primary btn-block" :type "submit" "Log In"))
           )

      (div :id "logged-in-content" :toggle rpc/logged-in?

           (div :class "panel panel-default"
                (div :class "panel-body"
                     "You are logged in as " (strong (text "~{logged-user-title}"))
                     (button :type "button" :class "btn btn-lg btn-primary" :click #(rpc/logout!) "Log Out")))

           (div :class "panel panel-default"
                (div :class "panel-body"

                     (tabs
                       (tab :name "Users"
                            (table :class "table table-condensed"
                                   (thead
                                     (tr
                                       (th "Username")
                                       (th "Name")
                                       (th "Last Name")
                                       (th "Role")))
                                   (tbody
                                     (loop-tpl :bindings [user (cell= (:users rpc/state))]
                                               (tr
                                                 (td (text (:username user)))
                                                 (td (text (:name user)))
                                                 (td (text (:last-name user)))
                                                 (td (text (str (when-let [role (:role user)]
                                                                  (name role))
                                                                (when (= :company (:role user))
                                                                  " (some company)"))))
                                                 (td
                                                   (a :href "javascript:void(0)"
                                                      :click #(rpc/update-user! @user)
                                                      ;:click #(reset! update-user @user)
                                                      "Update"))
                                                 (td
                                                   (a :href "javascript:void(0)"
                                                      :click #(rpc/remove-user! (:id @user))
                                                      "Remove")))))))

                       (tab :name "Companies"
                            (h4 "Companies")))))))))
